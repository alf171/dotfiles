# plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'sainnhe/tmux-fzf'
set -g @plugin 'tmux-plugins/tmux-sensible'

run '~/.tmux/plugins/tpm/tpm'

# change prefix configuration
set -g prefix C-s
unbind C-b

# behave like a login shell
set-option -g default-command "$SHELL -l"

# setup status bar
set -g status-position top
set -g status-bg default
set -g status-fg default
set -g status-style "bg=default,fg=default"
set -g status-justify absolute-centre
set -g status-style "bg=default fg=default"
set -g window-status-style "bg=default fg=default"
set -g window-status-current-style "bg=default fg=default bold"
set -g window-status-current-style "fg=default bold"
set -g status-left-length 120
set -g status-left "#{E:NVIM_FILE}"
set -g status-right "#h"
set -g message-style "bg=default,fg=blue"
set -g message-command-style "bg=default,fg=blue"
# split screen divider color
set -g pane-border-style "fg=brightblack"
set -g pane-active-border-style "fg=blue"
set -g message-style "bg=default,fg=blue"
set -g message-command-style "bg=default,fg=blue"


# prefix R to refresh config
unbind r
bind r run-shell "tmux source-file ~/.tmux.conf && tmux display-message 'tmux config reloaded'"

# vim bindings to move around panes
setw -g mode-keys vi
bind-key h select-pane -L
bind-key j select-pane -D
bind-key k select-pane -U
bind-key l select-pane -R

# vim quality of life
set -g escape-time 0
set -g mouse on

# prefix g to open github
bind-key g run-shell "~/dotfiles/tmux/open-code.sh"
# replace your bind with this (put it AFTER TPM/plugin lines)
bind-key f display-popup -E 'bash -lc "$HOME/dotfiles/tmux/new-pane.sh"'

# set prefix + d to close window
unbind d
bind d kill-window
# prefix + x close entire session
bind x confirm-before -p "Kill entire session #S? (y/n)" kill-session

# open split in current dir
bind '"' split-window -v -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"

# Directional splits (same dir)
bind C-h  split-window -h -b -c "#{pane_current_path}"
bind C-l  split-window -h    -c "#{pane_current_path}"
bind C-k  split-window -v -b -c "#{pane_current_path}"
bind C-j  split-window -v    -c "#{pane_current_path}"

# also open new window with current dir
bind c new-window -c "#{pane_current_path}"

bind -r H resize-pane -L 1   # Move left border left by 1
bind -r L resize-pane -R 1   # Move right border right by 1
bind -r J resize-pane -D 1   # Move bottom border down by 1
bind -r K resize-pane -U 1   # Move top border up by 1


# Start windows and panes at 1, not 0
set -g base-index 1
set -g pane-base-index 1
set -g renumber-windows on

# prefix [ is more vim like
set-window-option -g mode-keys vi
bind-key -T copy-mode-vi v send -X begin-selection
bind-key -T copy-mode-vi V send -X select-line
# might be mac specific
set -s copy-command 'pbcopy'
bind-key -T copy-mode-vi y send -X copy-pipe-and-cancel 'pbcopy'

# Enable focus events and set terminal features
set -g default-terminal "tmux-256color"
set -as terminal-overrides ',*:RGB'

# try to fix control J and K
unbind -n C-j
unbind -n C-k

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
vim_pattern='(\S+/)?g?\.?(view|l?n?vim?x?|fzf)(diff)?(-wrapped)?'
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +${vim_pattern}$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l

# clear history with Command + K
# if-shell "! $is_vim" \
#   "bind-key -n C-k send-keys -R \; send-keys C-l \; run-shell 'tmux clear-history'" \
#   "unbind-key -n C-k"
